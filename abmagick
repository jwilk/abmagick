#!/usr/bin/env python3
# encoding=UTF-8

# Copyright Â© 2022 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

import argparse
import base64
import collections
import shlex
import sys

0_0  # Python >= 3.6 is required

def fmtcolor(c):
    assert 0 <= c <= 0xFF
    d = f'{c:02X}'
    assert len(d) == 2
    if d[0] == d[1]:
        d = d[0]
    return '#' + 3 * d

def cprint(*args, end=' '):
    for arg in args:
        arg = str(arg)
        print(shlex.quote(arg), end=end)

def main():
    ap = argparse.ArgumentParser()
    ap.add_argument('path', metavar='PATH')
    ap.add_argument('--gm', action='store_true', help='use GraphicsMagick')
    opts = ap.parse_args()
    data = sys.stdin.buffer.read()
    cprint('convert')
    if opts.gm:
        cntr = collections.Counter(data)
        [[bg, _]] = cntr.most_common(1)
        cprint(
            f'xc:{fmtcolor(bg)}',
            '-resize', f'1x{len(data)}!',
            '-depth', 8,
        )
        for n, c in enumerate(data):
            if c == bg:
                continue
            cprint(
                '-fill', fmtcolor(c),
                '-draw', f'point 0,{n}'
            )
    else:
        pgm = f'P5\n1 {len(data)} 255\n'.encode() + data
        pgm64 = base64.b64encode(pgm).decode()
        cprint(f'inline:data:image/x-portable-graymap;base64,{pgm64}')
    cprint(f'gray:{opts.path}', end='\n')

if __name__ == '__main__':
    main()

# vim:ts=4 sts=4 sw=4 et
